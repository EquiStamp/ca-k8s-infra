apiVersion: v1
kind: Namespace
metadata:
  name: analysis-{% raw %}{{ .Values.environment }}{% endraw %}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: minio-credentials
  namespace: analysis-{% raw %}{{ .Values.environment }}{% endraw %}
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: team-secretstore
    kind: ClusterSecretStore
  target:
    name: minio-credentials
    creationPolicy: Owner
  data:
    - secretKey: MINIO_USER
      remoteRef:
        key: analysis/minio-credentials
        property: username
    - secretKey: MINIO_PASSWORD
      remoteRef:
        key: analysis/minio-credentials
        property: password
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: analyst-{% raw %}{{ .Values.environment }}{% endraw %}
rules:
# Read-only Ray job permissions
- apiGroups: ["ray.io"]
  resources: ["rayjobs"]
  verbs: ["get", "list"]
# Read-only Ray cluster permissions
- apiGroups: ["ray.io"]
  resources: ["rayclusters"]
  verbs: ["get", "list"]
---
{% if cookiecutter.network_policies %}
apiVersion: "cilium.io/v2"
kind: CiliumNetworkPolicy
metadata:
  name: analysis-policy
  namespace: analysis-{% raw %}{{ .Values.environment }}{% endraw %}
spec:
  endpointSelector: {}
  egress:
    # Allow traffic to minio-internal
    - toEndpoints:
        - matchLabels:
            app: minio
            k8s:io.kubernetes.pod.namespace: minio-internal-{% raw %}{{ .Values.environment }}{% endraw %}
      toPorts:
        - ports:
            - port: "9000"
              protocol: TCP
---
{% endif %}
