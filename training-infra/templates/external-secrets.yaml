apiVersion: v1
kind: ServiceAccount
metadata:
  name: helm-installer-{{ .Values.environment }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-16"
    "helm.sh/hook-delete-policy": before-hook-creation
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: helm-installer-role-{{ .Values.environment }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-16"
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups: [""]
  resources: ["namespaces", "secrets", "serviceaccounts", "services", "events", "configmaps", "pods"]
  verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "daemonsets", "replicasets", "statefulsets"]
  verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles", "rolebindings", "clusterroles", "clusterrolebindings"]
  verbs: ["get", "list", "create", "update", "delete", "patch"]
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["get", "list", "create", "update", "delete", "patch"]
- apiGroups: ["external-secrets.io"]
  resources: ["*"]
  verbs: ["get", "list", "create", "update", "delete", "patch"]
- apiGroups: ["generators.external-secrets.io"]
  resources: ["*"]
  verbs: ["get", "list", "create", "update", "delete", "patch"]
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["validatingwebhookconfigurations", "mutatingwebhookconfigurations"]
  verbs: ["get", "list", "create", "update", "delete", "patch"]
- apiGroups: ["cert-manager.io"]
  resources: ["certificates", "certificaterequests", "issuers", "clusterissuers"]
  verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: helm-installer-binding-{{ .Values.environment }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-16"
    "helm.sh/hook-delete-policy": before-hook-creation
subjects:
- kind: ServiceAccount
  name: helm-installer-{{ .Values.environment }}
  namespace: default
roleRef:
  kind: ClusterRole
  name: helm-installer-role-{{ .Values.environment }}
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: Job
metadata:
  name: external-secrets-install-{{ .Values.environment }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-15"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    spec:
      serviceAccountName: helm-installer-{{ .Values.environment }}
      containers:
      - name: helm
        image: alpine/helm:3.12.0
        command:
        - /bin/sh
        - -c
        - |
          helm repo add external-secrets https://charts.external-secrets.io
          helm repo update
          helm upgrade --install external-secrets-{{ .Values.environment }} external-secrets/external-secrets \
            --namespace external-secrets-{{ .Values.environment }} \
            --create-namespace \
            --set extraEnv[0].name=AWS_SECRETSMANAGER_ENDPOINT \
            --set extraEnv[0].value=http://aws.aws-agent-env-{{ .Values.environment }}.svc.cluster.local \
            --wait
      restartPolicy: Never
  backoffLimit: 4
  ttlSecondsAfterFinished: 100 
