apiVersion: batch/v1
kind: Job
metadata:
  name: stanfordnlp-imdb-dataset-sync
  namespace: training-{{ .Values.environment }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "10"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    spec:
      containers:
      - name: dataset-sync
        image: localhost:5001/job:{{ .Values.environment }}
        imagePullPolicy: Always
        command:
        - /bin/bash
        - -c
        - |
          # Configure MinIO client
          mc alias set myminio http://minio.minio-internal-{{ .Values.environment }}.svc.cluster.local:9000 $MINIO_ACCESS_KEY $MINIO_SECRET_KEY

          # Create bucket if it doesn't exist
          mc mb myminio/datasets --ignore-existing

          # Create temporary directory for dataset
          mkdir -p /tmp/dataset

          # Download dataset from Hugging Face and save to disk
          python3 -c "from datasets import load_dataset; dataset = load_dataset('stanfordnlp/imdb'); dataset.save_to_disk('/tmp/dataset')"

          # Upload to MinIO
          mc cp -r /tmp/dataset/ myminio/datasets/imdb/

          # Cleanup
          rm -rf /tmp/dataset
        env:
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: username
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: password
        - name: ENVIRONMENT
          value: {{ .Values.environment }}
      restartPolicy: Never
  backoffLimit: 4
  activeDeadlineSeconds: 120  # Job will fail after 120 seconds if not completed
