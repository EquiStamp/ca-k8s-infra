apiVersion: batch/v1
kind: Job
metadata:
  name: model-sync
spec:
  template:
    spec:
      containers:
      - name: model-sync
        image: localhost:5001/job:{{ .Values.environment }}
        imagePullPolicy: Always
        command:
        - /bin/bash
        - -c
        - |
          # Configure MinIO client
          mc alias set myminio http://minio.minio-internal-{{ .Values.environment }}.svc.cluster.local:9000 $MINIO_ACCESS_KEY $MINIO_SECRET_KEY

          # Create bucket if it doesn't exist
          mc mb myminio/models --ignore-existing

          # Upload to MinIO
          mc cp -r /volumes/model-small/ myminio/models/model-small/

          # Cleanup
          rm -rf /tmp/model
        env:
        - name: MINIO_ACCESS_KEY
          value: "Qw8n3kF4l5p6s7t8u9v0w1x2y3z4A5B2!"
        - name: MINIO_SECRET_KEY
          value: "6C7d8E9f0G1h2I3j4K5l6M7n8O9p0Q1r2S3t4U5v6W7x8Y9z!"
        - name: ENVIRONMENT
          value: {{ .Values.environment }}
        volumeMounts:
        - name: model-volume
          mountPath: /volumes/model-small
          readOnly: true
      volumes:
      - name: model-volume
        hostPath:
          path: /volumes/huggingface/models/model-small
          type: Directory
      restartPolicy: Never
  backoffLimit: 0
  activeDeadlineSeconds: 120  # Job will fail after 120 seconds if not completed
