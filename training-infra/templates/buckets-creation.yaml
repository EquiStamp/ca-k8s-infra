apiVersion: batch/v1
kind: Job
metadata:
  name: internal-buckets
spec:
  template:
    spec:
      containers:
      - name: internal-buckets
        image: localhost:5001/job:{{ .Values.environment }}
        imagePullPolicy: Always
        command:
        - /bin/bash
        - -c
        - |
          # Configure MinIO client
          mc alias set myminio http://minio.minio-internal-{{ .Values.environment }}.svc.cluster.local:9000 $MINIO_ACCESS_KEY $MINIO_SECRET_KEY

          # Create bucket if it doesn't exist
          mc mb myminio/models --ignore-existing
          mc mb myminio/datasets --ignore-existing
        env:
        - name: MINIO_ACCESS_KEY
          value: "Qw8n3kF4l5p6s7t8u9v0w1x2y3z4A5B2!"
        - name: MINIO_SECRET_KEY
          value: "6C7d8E9f0G1h2I3j4K5l6M7n8O9p0Q1r2S3t4U5v6W7x8Y9z!"
        - name: ENVIRONMENT
          value: {{ .Values.environment }}
      restartPolicy: Never
  backoffLimit: 0
  activeDeadlineSeconds: 120  # Job will fail after 120 seconds if not completed
---
apiVersion: batch/v1
kind: Job
metadata:
  name: external-buckets
spec:
  template:
    spec:
      containers:
      - name: external-buckets
        image: ubuntu:20.04
        command:
        - /bin/bash
        - -c
        - |
          # Install required packages
          apt-get update && apt-get install -y \
            wget \
            curl


          # Install MinIO client
          wget https://dl.min.io/client/mc/release/linux-amd64/mc
          chmod +x mc
          mv mc /usr/local/bin/

          # Configure MinIO client
          mc alias set myminio http://minio.minio-external-{{ .Values.environment }}.svc.cluster.local:9000 $MINIO_ACCESS_KEY $MINIO_SECRET_KEY

          # Create bucket if it doesn't exist
          mc mb myminio/models --ignore-existing
          mc mb myminio/datasets --ignore-existing
        env:
        - name: MINIO_ACCESS_KEY
          value: "Qw8n3kF4l5p6s7t8u9v0w1x2y3z4A5B2!"
        - name: MINIO_SECRET_KEY
          value: "6C7d8E9f0G1h2I3j4K5l6M7n8O9p0Q1r2S3t4U5v6W7x8Y9z!"
        - name: ENVIRONMENT
          value: {{ .Values.environment }}
      restartPolicy: Never
  backoffLimit: 0
  activeDeadlineSeconds: 120  # Job will fail after 120 seconds if not completed
