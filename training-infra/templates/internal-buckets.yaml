apiVersion: v1
kind: ConfigMap
metadata:
  name: internal-buckets
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-1"
data:
  main.tf: |
    terraform {
      required_providers {
        minio = {
          source  = "aminueza/minio"
          version = "~> 3.0"
        }
        aws = {
          source  = "hashicorp/aws"
          version = "~> 5.0"
        }
      }

      backend "s3" {
        bucket = "tf-state"
        key = "internal-buckets.tfstate"
        region = "us-east-1"
        
        profile = "minio"

        skip_credentials_validation = true
        skip_metadata_api_check = true
        skip_region_validation = true
        use_path_style = true
      }

      required_version = ">= 1.0"
    }

    provider "minio" {
      minio_insecure = true
    }

    provider "aws" {
      profile = "default"
    }

    resource "minio_s3_bucket" "models" {
      bucket = "models"
    }

    resource "minio_s3_bucket" "datasets" {
      bucket = "datasets"
    }
---
apiVersion: batch/v1
kind: Job
metadata:
  name: internal-buckets
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "0"
spec:
  template:
    spec:
      initContainers:
        - name: prepare-minio
          image: localhost:5001/job:{{ .Values.environment }}
          imagePullPolicy: Always
          command: ["/bin/bash", "-c"]
          args: 
            - |
              # Configure MinIO client
              mc alias set myminio http://$MINIO_ENDPOINT $MINIO_USER $MINIO_PASSWORD

              # Create state bucket if it doesn't exist
              mc mb myminio/tf-state --ignore-existing
          env:
            - name: MINIO_USER
              value: "minioadmin"
            - name: MINIO_PASSWORD
              value: "minioadmin"
            - name: MINIO_ENDPOINT
              value: "minio.minio-internal-{{ .Values.environment }}.svc.cluster.local:9000"
      containers:
        - name: create-internal-buckets
          image: ghcr.io/opentofu/opentofu:latest
          imagePullPolicy: Always
          command: ["/bin/sh", "-c"]
          args:
            - |
              mkdir -p ~/.aws
              
              cat > ~/.aws/credentials <<EOF
              [default]
              aws_access_key_id = $DEFAULT_AWS_ACCESS_KEY_ID
              aws_secret_access_key = $DEFAULT_AWS_SECRET_ACCESS_KEY

              [minio]
              aws_access_key_id = $MINIO_USER
              aws_secret_access_key = $MINIO_PASSWORD
              EOF

              cat > ~/.aws/config <<EOF
              [default]
              region = us-east-1
              endpoint_url = $DEFAULT_AWS_ENDPOINT_URL

              [profile minio]
              region = us-east-1
              endpoint_url = http://$MINIO_ENDPOINT
              EOF

              cd /workspace && \
              tofu init && \
              tofu apply -auto-approve
          env:
            - name: MINIO_USER
              value: "minioadmin"
            - name: MINIO_PASSWORD
              value: "minioadmin"
            - name: MINIO_ENDPOINT
              value: "minio.minio-internal-{{ .Values.environment }}.svc.cluster.local:9000"
            - name: DEFAULT_AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: access-key
            - name: DEFAULT_AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: secret-access-key
            - name: DEFAULT_AWS_ENDPOINT_URL
              value: "http://aws-proxy.proxy.svc.cluster.local"
          volumeMounts:
            - name: tofu-workspace
              mountPath: /workspace
            - name: tofu-source
              mountPath: /workspace/main.tf
              subPath: main.tf
      restartPolicy: Never
      volumes:
        - name: tofu-source
          configMap:
            name: internal-buckets
        - name: tofu-workspace
          emptyDir: {}
  backoffLimit: 4
  activeDeadlineSeconds: 300
---
